"""Added timestamp fields to all core tables0

Revision ID: d211fc5086ee
Revises: f27a5c064ac5
Create Date: 2025-09-28 07:40:19.146088

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.sql import text # Импортируем для выполнения прямого SQL

# Определяем вчерашнюю дату в формате, понятном SQL.
# Формат 'YYYY-MM-DD HH:MM:SS'
YESTERDAY_DATE = '2025-09-27 10:00:00'


# revision identifiers, used by Alembic.
revision = 'd211fc5086ee'
down_revision = 'f27a5c064ac5'
branch_labels = None
depends_on = None


def upgrade():
    # --- 1. ТАБЛИЦА 'user' ---
    with op.batch_alter_table('user', schema=None) as batch_op:
        # 1.1 Добавляем колонку (временно nullable=True)
        batch_op.add_column(sa.Column('date_started', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('date_updated', sa.DateTime(), nullable=True))

    # 1.2 Заполняем существующие NULL-значения вчерашней датой
    op.execute(text(f"UPDATE \"user\" SET date_started = '{YESTERDAY_DATE}', date_updated = '{YESTERDAY_DATE}' WHERE date_started IS NULL"))

    # 1.3 Устанавливаем NOT NULL
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('date_started', nullable=False, existing_type=sa.DateTime())
        batch_op.alter_column('date_updated', nullable=False, existing_type=sa.DateTime())

    # --- 2. ТАБЛИЦА 'applicant_profile' ---
    with op.batch_alter_table('applicant_profile', schema=None) as batch_op:
        batch_op.add_column(sa.Column('date_started', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('date_updated', sa.DateTime(), nullable=True))
    op.execute(text(f"UPDATE applicant_profile SET date_started = '{YESTERDAY_DATE}', date_updated = '{YESTERDAY_DATE}' WHERE date_started IS NULL"))
    with op.batch_alter_table('applicant_profile', schema=None) as batch_op:
        batch_op.alter_column('date_started', nullable=False, existing_type=sa.DateTime())
        batch_op.alter_column('date_updated', nullable=False, existing_type=sa.DateTime())

    # --- 3. ТАБЛИЦА 'job_resource' ---
    with op.batch_alter_table('job_resource', schema=None) as batch_op:
        batch_op.add_column(sa.Column('date_started', sa.DateTime(), nullable=True))
        batch_op.add_column(sa.Column('date_updated', sa.DateTime(), nullable=True))
    op.execute(text(f"UPDATE job_resource SET date_started = '{YESTERDAY_DATE}', date_updated = '{YESTERDAY_DATE}' WHERE date_started IS NULL"))
    with op.batch_alter_table('job_resource', schema=None) as batch_op:
        batch_op.alter_column('date_started', nullable=False, existing_type=sa.DateTime())
        batch_op.alter_column('date_updated', nullable=False, existing_type=sa.DateTime())

    # --- 4. ТАБЛИЦА 'role_focus' ---
    # Для этой таблицы поле одно: 'date'. Оно должно быть добавлено с default
    with op.batch_alter_table('role_focus', schema=None) as batch_op:
        batch_op.add_column(sa.Column('date', sa.DateTime(), nullable=True))
    op.execute(text(f"UPDATE role_focus SET date = '{YESTERDAY_DATE}' WHERE date IS NULL"))
    with op.batch_alter_table('role_focus', schema=None) as batch_op:
        batch_op.alter_column('date', nullable=False, existing_type=sa.DateTime())


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_column('date_updated')
        batch_op.drop_column('date_started')

    with op.batch_alter_table('role_focus', schema=None) as batch_op:
        batch_op.drop_column('date')

    with op.batch_alter_table('job_resource', schema=None) as batch_op:
        batch_op.drop_column('date_updated')
        batch_op.drop_column('date_started')

    with op.batch_alter_table('applicant_profile', schema=None) as batch_op:
        batch_op.drop_column('date_updated')
        batch_op.drop_column('date_started')

    # ### end Alembic commands ###
